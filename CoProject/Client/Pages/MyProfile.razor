@page "/profile"
@inherits LayoutComponentBase
@using CoProject.Client.Forms
@using Microsoft.AspNetCore.Components
@using CoProject.Shared
@layout AuthLayout
@inject HttpClient _client
@inject NavigationManager _navManager

<PageTitle>My Profile - CoProject</PageTitle>

<style>
    input[type='text'] {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        box-sizing: border-box;
        border-radius: 10px;
        border: 1px solid gray;
    }

    button[type='submit'] {
        margin-left: auto;
        margin-right: auto;
        margin-top: 20px;
        margin-bottom: 30px;
        display: block;
        background-color: #0b4f6c;
        color: white;
        font-size: 20px;
        border: #707070;
        border-radius: 10px;
        height: 50px;
        width: 90%;
    }
</style>


<div class="container">
    <div class="center">
        <h1>My Profile</h1>
        <hr />
        <h2>Update your information</h2>
    </div>

    @if (_user == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <EditForm Model="@_form" OnValidSubmit="@OnSubmit">
            <label for="name" class="form-header"> Your name <span class="required">*</span></label>
            <InputText type="text" id="name" name="name" placeholder="Enter your new name here" @bind-Value="_form.Name" />

            <label for="email" class="form-header">Your email <span class="required">*</span></label>
            <InputText type="text" id="email" placeholder="Enter your new e-mail address here" @bind-Value="_form.Email" />

            <button type="submit">Update profile</button>
        </EditForm>
    }
</div>

@code {

    private int Id { get; set; }

    private ProfileForm _form = new();
    private UserDetailsDTO? _user;

    protected override async Task OnInitializedAsync()
    {
        var resp = await _client.GetAsync("api/user");

        if (!resp.IsSuccessStatusCode)
        {
            _navManager.NavigateTo("/projects");
            return;
        }

        _user = await resp.Content.ReadFromJsonAsync<UserDetailsDTO>();

        _form.Name = _user!.Name;
        _form.Email = _user!.Email;
    }

    private async void OnSubmit()
    {
        await _client.PutAsJsonAsync("api/user", _form);
    }
}