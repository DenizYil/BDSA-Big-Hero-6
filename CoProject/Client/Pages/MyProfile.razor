@page "/profile"
@layout AuthLayout
@using CoProject.Client.Forms
@using Microsoft.AspNetCore.Components
@using CoProject.Shared
@inject HttpClient _client
@inject NavigationManager _navManager

<PageTitle>My Profile - CoProject</PageTitle>

<style>
    input[type='text'] {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        box-sizing: border-box;
        border-radius: 10px;
        border: 1px solid gray;
    }

    button[type='submit'] {
        margin-left: auto;
        margin-right: auto;
        margin-top: 20px;
        margin-bottom: 30px;
        display: block;
        background-color: #0b4f6c;
        color: white;
        font-size: 20px;
        border: #707070;
        border-radius: 10px;
        height: 50px;
        width: 90%;
    }

    input[type="file"] {
        text-align: center;
        border: 1px solid grey;
        width: 50%;
        padding: 10px;
        box-sizing: border-box;
        border-radius: 6px;
        margin-top: 10px;
        display: block;
    }
</style>


<div class="container">
    <div class="center">
        <h1>My Profile</h1>
        <hr/>
        <h2>Update your information</h2>
    </div>

    @if (_user == null)
    {
        <LoadingComponent></LoadingComponent>
    }
    else
    {
        <EditForm Model="@_form" OnValidSubmit="@OnSubmit">
            <div class="profileImageContainer">
                <div class="innerProfileImage">
                    <img alt="profile image of user" src="@profileImage" />
                    <InputFile OnChange="OnInputFileChange" />
                </div>
            </div>

            <DataAnnotationsValidator/>
            <label for="name" class="form-header"> Your name <span class="required">*</span></label>
            <InputText type="text" id="name" name="name" placeholder="Enter your new name here" @bind-Value="_form.Name"/>

            <label for="email" class="form-header">Your email <span class="required">*</span></label>
            <InputText type="text" id="email" placeholder="Enter your new e-mail address here" @bind-Value="_form.Email"/>

            <button type="submit">Update profile</button>
        </EditForm>
    }
</div>

@code {
    private ProfileForm _form = new();
    private UserDetailsDTO? _user;
    private IBrowserFile? selectedFile;
    private string profileImage = "/images/noimage.jpeg";

    [CascadingParameter]
    public AuthLayout? usedLayout { get; set; }

    protected override async Task OnInitializedAsync()
    {

        var response = await _client.GetAsync("/api/user");
        if (response.IsSuccessStatusCode)
        {
            var userFind = await response.Content.ReadFromJsonAsync<UserDetailsDTO>();

            if (userFind != null)
            {
                _user = userFind;
                profileImage = _user.Image;
                _form.Name = _user.Name;
                _form.Email = _user.Email;
            }
        }
    }

    private void OnInputFileChange (InputFileChangeEventArgs e)
    {
        selectedFile = e.GetMultipleFiles()[0];
        this.StateHasChanged();
    }

    private async void OnSubmit()
    {
        var updateBody = new UpdateUserBody();
        if (selectedFile != null)
        {
            try
            {

                var maxFileSize = 2048000;
                Stream stream = selectedFile.OpenReadStream(maxFileSize);
                MemoryStream ms = new MemoryStream();
                await stream.CopyToAsync(ms);
                stream.Close();

                UploadedFile fileUploaded = new UploadedFile();
                fileUploaded.FileName = selectedFile.Name;
                fileUploaded.FileContent = ms.ToArray();


                updateBody.file = fileUploaded;

                ms.Close();
            }
            catch(Exception e)
            {
                _navManager.NavigateTo($"/profile?error=You can max upload 2MB images.");
                return;
            }

        }

        updateBody.updatedUser = new UserUpdateDTO(_form.Name, _form.Email);

        var response = await _client.PutAsJsonAsync("api/user", updateBody);

        Console.WriteLine("STATUS CODE: " + response.StatusCode);
        if (!response.IsSuccessStatusCode)
        {
            _navManager.NavigateTo($"/profile?error={await response.Content.ReadAsStringAsync()}");
            return;
        }

        if(selectedFile != null)
        {
            var bytes = new byte[selectedFile.Size];
            await selectedFile.OpenReadStream(2048000).ReadAsync(bytes);
            profileImage = $"data:{selectedFile.ContentType};base64,{Convert.ToBase64String(bytes)}";
        }
        _navManager.NavigateTo($"/profile?success={await response.Content.ReadAsStringAsync()}");
    }

}