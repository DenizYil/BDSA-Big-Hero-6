@page "/projects"
@layout AuthLayout
@using CoProject.Client.Shared
@using CoProject.Shared

@inject HttpClient _client


<PageTitle>Projects - CoProject</PageTitle>
<h1>Projects</h1>
<hr />
<h2>Below you can see a list of available projects.</h2>

<div class="search">
    <input @oninput="@((i) => search = i.Value.ToString().ToLower().Trim())" id="search-bar" placeholder="Search..." name="searchinput">
    <img class="searchIcon" src="/images/searchicon.svg" alt="Search icon">
</div>

@if (_projects == null)
{
<p>Loading...</p> }
            else
            {
@if (!_projects.Any())
{
<p>There is somehow no projects</p> }
                else
                {
<div class="projects">

    @foreach (var project in (search.Length > 0 && search != null ? _projects.Where(p => p.Name.ToLower().Trim().Contains(search.ToLower().Trim()) || p.Tags.Select(t => t.ToLower().Trim()).Contains(search.ToLower().Trim())) : _projects))
    {
        <ProjectCard Project="@project" />
    }
</div>}}

@if (usedLayout != null && usedLayout.loggedInUser != null && usedLayout.loggedInUser.Supervisor == true)
{
    <div class="createProject">
        <a href="/createproject">
            <button type="button">Create new project</button>
        </a>
    </div>
}


@code { private IEnumerable<ProjectDetailsDTO>? _projects;

    private string search = "";

    [CascadingParameter]
    public AuthLayout? usedLayout { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _projects = await _client.GetFromJsonAsync<IEnumerable<ProjectDetailsDTO>>("api/projects");
    } }