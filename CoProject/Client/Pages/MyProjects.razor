@page "/myprojects"
@using CoProject.Shared
@layout AuthLayout

@inject HttpClient _client


<PageTitle>Projects - CoProject</PageTitle>
<h1>My Projects</h1>
<hr/>
<h2>Below you can see a list of available projects.</h2>

<div class="search">
    <input @oninput="@(i => _search = i.Value.ToString().ToLower().Trim())" id="search-bar" placeholder="Search for project name or project tag" name="searchinput">
    <img class="searchIcon" src="/images/searchicon.svg" alt="Search icon">
</div>

@if (_projects == null)
{
    <LoadingComponent></LoadingComponent>
}
else
{
    @if (!_projects.Any())
    {
        <p>You somehow have no projects</p>
    }
    else
    {
        <div class="projects">

            @foreach (var project in _search.Any() ? GetProjects() : _projects)
            {
                <ProjectCard Project="@project"/>
            }
        </div>
    }
}

@if (UsedLayout.loggedInUser != null && UsedLayout.loggedInUser.Supervisor)
{
    <div class="createProject">
        <a href="/createproject">
            <button type="button">Create new project</button>
        </a>
    </div>
}


@code {
    private IEnumerable<ProjectDetailsDTO>? _projects;

    private string _search = "";

    [CascadingParameter]
    public AuthLayout UsedLayout { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        _projects = await _client.GetFromJsonAsync<IEnumerable<ProjectDetailsDTO>>("api/user/projects");
    }

    private IEnumerable<ProjectDetailsDTO> GetProjects()
    {
        return _projects!.Where(p =>
            p.Name.ToLower().Trim().Contains(_search) ||
            p.Tags.Any(t => t.ToLower().Trim().Contains(_search))
            );
    }

}