@page "/project/{id}"
@inject NavigationManager NavManager
@layout AuthLayout
@inject HttpClient Http
@using Models.Project

<PageTitle>View Project - CoProject</PageTitle>

<h1 id="ProjectName">@project.Name</h1>
<h2 id="registered">Registered: @project.Users.Count/@project.Max</h2>

<hr/>

<div class="supervisorContainer">
    <img class="imageOfSupervisor" alt="PICTURE OF SUPERVISOR" src="https://via.placeholder.com/150">
    <p class="supervisorName">Project creator id :> @project.SupervisorId</p>
    <p class="createdBy">Created on @project.Created</p>
</div>

<p class="projectDescription">
    @project.Description
</p>

<div class="tags">
    @foreach (var t in project.Tags)
    {
        <p class="tagName">@t</p>
    }
</div>

<button id="editProject"><a href="/editproject/@id">Edit project</a></button>

<button id="delete">Delete</button>
<hr/>

<p id="studentsRegistered">Students registered</p>

<div id="bagOfStudents">
    
    @foreach (var u in project.Users)
    {
        <div class="oneStudent">
            <div class="studentLeft">
                <img class="studentImg" src="https://via.placeholder.com/150?text=student" alt="Image Of Student"/>
            </div>
            <div class="studentRight">
                <p class="student">@u.Name</p>
                <p class="email">@u.Email<img src="/images/copyIcon.svg" class="material-icons"/></p>
            </div>
        </div>
    }
</div>

@code {
    private ProjectDetailsDTO? project;
    [Parameter]
    public string? id { get; set; }
    protected override void OnInitialized()
    {
        if (id == null)
        {
            NavManager.NavigateTo("/projects");
        }
        
    }

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync($"/projects/{id}");

        if (response.IsSuccessStatusCode)
        {
             project = await response.Content.ReadFromJsonAsync<ProjectDetailsDTO>();
        }
        else
        {
            NavManager.NavigateTo("/projects");
        }
    }
}
